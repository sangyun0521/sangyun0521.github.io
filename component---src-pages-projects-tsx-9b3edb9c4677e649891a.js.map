{"version":3,"file":"component---src-pages-projects-tsx-9b3edb9c4677e649891a.js","mappings":"qQAQA,MAAMA,GAAqBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,CAAAC,OAAA,aAAXF,CAAY,CAAAG,KAAA,SAAAC,OAAA,qNAcjCC,GAAiBL,EAAAA,EAAAA,GAAOM,EAAAA,EAAW,CAAAJ,OAAA,aAAlBF,CAAmB,CAAAG,KAAA,SAAAC,OAAA,2BAKpCG,GAAkBP,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,2DAOlBI,GAAKR,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,6MAaLK,GAAIT,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,+CAMJM,GAAQV,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,iEAORO,GAAYX,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,mHAUZQ,GAAOZ,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,uMAuCb,MA1ByD,SAAAS,GASrD,IAT+D,MACjEC,EAAK,KACLC,EAAI,WACJC,EAAU,QACVC,EACAC,WACEC,iBAAiB,gBAACC,IACnB,KACDC,GACDR,EACC,OACES,EAAAA,EAAAA,IAACvB,EAAkB,CAACwB,GAAIF,IACpBC,EAAAA,EAAAA,IAACjB,EAAc,CAACmB,MAAOJ,EAAiBK,IAAI,wBAC5CH,EAAAA,EAAAA,IAACf,EAAkB,MACfe,EAAAA,EAAAA,IAACd,EAAK,KAAEM,IACRQ,EAAAA,EAAAA,IAACb,EAAI,KAAEM,IACPO,EAAAA,EAAAA,IAACZ,EAAQ,KAAEM,EAAWU,KAAIC,IACtBL,EAAAA,EAAAA,IAACX,EAAY,CAACiB,IAAKD,GAAOA,OAG9BL,EAAAA,EAAAA,IAACV,EAAO,KAAEK,IAItB,EClGA,MAAMY,GAAkB7B,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,4GAyBxB,MAhByD,SAAAS,GAErD,IAF+D,SACjEiB,GACDjB,EACC,OACES,EAAAA,EAAAA,IAACO,EAAkB,KACdC,EAASJ,KACRK,IAAA,IACIC,MAAM,GAACC,EAAIC,QAAQ,KAACC,GAAK,YAAEC,IACTL,EAAA,OACpBT,EAAAA,EAAAA,IAACe,GAAWC,EAAAA,EAAAA,GAAA,GAAKF,EAAW,CAAEf,KAAMc,EAAMP,IAAKK,IAAM,IAKjE,ECfA,MAAMM,GAASvC,EAAAA,EAAAA,GAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,mDAqBf,MAfwD,SAAAS,GAIrD,IAHD2B,MACEC,mBAAmB,MAAEC,KAExB7B,EACC,OACES,EAAAA,EAAAA,IAACiB,EAAS,MACRjB,EAAAA,EAAAA,IAACqB,EAAAA,EAAM,OACPrB,EAAAA,EAAAA,IAACsB,EAAAA,EAAW,OACZtB,EAAAA,EAAAA,IAACuB,EAAW,CAACf,SAAUY,KACvBpB,EAAAA,EAAAA,IAACwB,EAAAA,EAAM,MAGb,C","sources":["webpack://gatsby-starter-default/./src/components/Projects/ProjectItem.tsx","webpack://gatsby-starter-default/./src/components/Projects/ProjectList.tsx","webpack://gatsby-starter-default/./src/pages/projects.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { ProjectFrontmatterType } from 'types/ProjectItem.types'\r\n\r\ntype ProjectItemProps = ProjectFrontmatterType & {link: string}\r\n\r\nconst ProjectItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\r\n  transition: 0.3s box-shadow;\r\n  cursor: pointer;\r\n  background-color: #29323c;\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\n\r\nconst ThumbnailImage = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProjectItemContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-bottom: 3px;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`\r\n\r\nconst Date = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  opacity: 0.7;\r\n`\r\n\r\nconst Category = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n  margin: 10px -5px;\r\n`\r\n\r\nconst CategoryItem = styled.div`\r\n  margin: 2.5px 5px;\r\n  padding: 3px 5px;\r\n  border-radius: 3px;\r\n  background: black;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: white;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 16px;\r\n  opacity: 0.8;\r\n`\r\n\r\nconst ProjectItem: FunctionComponent<ProjectItemProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: {gatsbyImageData}\r\n  },\r\n  link,\r\n}) {\r\n  return (\r\n    <ProjectItemWrapper to={link}>\r\n        <ThumbnailImage image={gatsbyImageData} alt=\"Project Item Image\" />\r\n        <ProjectItemContent>\r\n            <Title>{title}</Title>\r\n            <Date>{date}</Date>\r\n            <Category>{categories.map(item => (\r\n                <CategoryItem key={item}>{item}</CategoryItem>\r\n              ))}\r\n            </Category>\r\n            <Summary>{summary}</Summary>\r\n        </ProjectItemContent>\r\n    </ProjectItemWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectItem","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport ProjectItem from './ProjectItem'\r\nimport { ProjectListItemType } from 'types/ProjectItem.types'\r\n\r\ntype ProjectListProps = {\r\n  projects: ProjectListItemType[]\r\n}\r\n\r\nconst ProjectListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 50px 0 100px;\r\n`\r\n\r\nconst ProjectList: FunctionComponent<ProjectListProps> = function ({\r\n  projects,\r\n}) {\r\n  return (\r\n    <ProjectListWrapper>\r\n        {projects.map(\r\n          ({\r\n              node: {id, fields: {slug}, frontmatter}\r\n          }: ProjectListItemType) => (\r\n            <ProjectItem {...frontmatter} link={slug} key={id} />\r\n          ),\r\n        )}\r\n    </ProjectListWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport GlobalStyle from 'components/Common/GlobalStyle'\r\nimport Footer from 'components/Common/Footer'\r\nimport Header from 'components/Common/Header'\r\nimport ProjectList from 'components/Projects/ProjectList'\r\nimport { ProjectListItemType } from 'types/ProjectItem.types'\r\nimport { graphql } from 'gatsby'\r\n\r\ntype IndexPageProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: ProjectListItemType[]\r\n    }\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n\r\nconst ProjectsPage: FunctionComponent<IndexPageProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  }\r\n}) {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <GlobalStyle />\r\n      <ProjectList projects={edges}/>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProjectsPage\r\n\r\nexport const getProjectList = graphql`\r\n  query getProjectList {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/contents/projects/\" } },\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n      ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["ProjectItemWrapper","_styled","Link","target","name","styles","ThumbnailImage","GatsbyImage","ProjectItemContent","Title","Date","Category","CategoryItem","Summary","_ref","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","to","image","alt","map","item","key","ProjectListWrapper","projects","_ref2","node","id","fields","slug","frontmatter","ProjectItem","_extends","Container","data","allMarkdownRemark","edges","Header","GlobalStyle","ProjectList","Footer"],"sourceRoot":""}