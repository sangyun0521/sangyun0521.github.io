{"version":3,"file":"component---src-pages-posts-tsx-ee2fe83fbdfcb942c027.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Common/Footer.tsx","webpack://gatsby-starter-default/./src/components/Common/Header.tsx","webpack://gatsby-starter-default/./src/components/Common/Template.tsx","webpack://gatsby-starter-default/./src/components/Posts/Header.tsx","webpack://gatsby-starter-default/./src/components/Posts/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Posts/CategoryItem.tsx","webpack://gatsby-starter-default/./src/components/Posts/PostList.tsx","webpack://gatsby-starter-default/./src/pages/posts.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst FooterWrapper = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  margin-top: auto;\r\n  padding: 50px 0;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n  color: white;\r\n`\r\n\r\nconst Footer: FunctionComponent = function () {\r\n  return (\r\n    <FooterWrapper>\r\n      <br />Â© 2023 Sangyun Lee, Powered By Gatsby.\r\n    </FooterWrapper>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: auto;\r\n  padding: 25px 25px; \r\n  color: white;\r\n  background-color: #29323c;\r\n`\r\n\r\nconst MenuWrapper = styled.div`\r\n  margin-left: auto;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n  display: flex;\r\n`\r\n\r\nconst Item = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst TitleWrapper = styled.div`\r\n  fonst-size: 25px;\r\n  font-weight: 1000;\r\n  text-align: center;\r\n  line-height: 1.5\r\n`\r\n\r\n\r\nconst Header: FunctionComponent = function () {\r\n  return (\r\n    <HeaderWrapper>\r\n      <TitleWrapper><Link to=\"/\">Sangyun's Blog</Link></TitleWrapper>\r\n      <MenuWrapper>\r\n        <Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">About</Link>\r\n        </Item>\r\n        <Item>  \r\n          <Link to=\"/projects\">Projects</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/posts\">Posts</Link>\r\n        </Item> \r\n      </MenuWrapper>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { FunctionComponent, ReactNode } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport GlobalStyle from 'components/Common/GlobalStyle'\r\nimport Footer from 'components/Common/Footer'\r\nimport Header from 'components/Common/Header'\r\n\r\ntype TemplateProps = {\r\n  children: ReactNode\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n\r\nconst Template: FunctionComponent<TemplateProps> = function ({ children }) {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <GlobalStyle />\r\n      {children}\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Template","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  padding: 100px 25px;\r\n  justify-content : center;\r\n  width: 100%; \r\n  color: white;\r\n  background-color: #000000;\r\n\r\n  font-size: 35px;\r\n`\r\n\r\nconst Intro = styled.div`\r\n  background-color: #222222;\r\n  font-size: 16px;\r\n  margin: 20px 20px;\r\n  padding: 10px 10px;\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n`\r\nconst Content = styled.div`\r\n  width: 300px;\r\n\r\n`\r\n\r\nconst List = styled.div`\r\n    width: 100%;\r\n`\r\n\r\n\r\nconst Header: FunctionComponent = function () {\r\n  return (\r\n    <HeaderWrapper>\r\n        Posts\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\n\r\ntype PostItemProps = PostFrontmatterType & {link: string}\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: horizontal;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  border-color: gray;\r\n  padding: 10px 10px;\r\n  margin: 10px 10px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n  width: 50%;\r\n`\r\n\r\nconst Date = styled.div`\r\n  font-size: 20px;\r\n  font-decoration: italic;\r\n`\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n  title,\r\n  date,\r\n  category,\r\n  link,\r\n}) {\r\n  return (\r\n    <PostItemWrapper to={link}>\r\n        <Title>{title}</Title>\r\n        <Date>{date}</Date>\r\n    </PostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PostItem","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\n\r\nconst PostItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  color: grey;\r\n  margin: 10px 10px;\r\n  text-decoration: underline;\r\n`\r\n\r\nconst CategoryItem: FunctionComponent<string> = function ({category}) {\r\n  return (\r\n    <PostItemWrapper>\r\n      {category}\r\n    </PostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default CategoryItem","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport PostItem from 'components/Posts/PostItem' \r\nimport CategoryItem from 'components/Posts/CategoryItem' \r\n\r\ntype PostListProps = {\r\n    posts: PostListItemType[]\r\n}\r\n\r\nconst Intro = styled.div`\r\n  background-color: #222222;\r\n  font-size: 16px;\r\n  margin: 20px 20px;\r\n  padding: 10px 10px;\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  margin: 20px 20px;\r\n`\r\nconst Content = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nconst List = styled.div`\r\n    width: 300px;\r\n`\r\n\r\nconst CategoryTitle = styled.div`\r\n    font-size: 30px;\r\n    font-weight: 900;\r\n    margin: 10px 10px;\r\n`\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n    posts,\r\n}) {\r\n  return (\r\n    <div>\r\n        <Intro> \r\n        â ê³µë¶ ì§ì ì¶ì  ë° ê³µì <br/>\r\n        - ê³µë¶í ë´ì©ì ì ë¦¬í´ì ë¤ë¥¸ ì¬ëìê² ì¤ëª í  ì ìì ì ëë¡ ê¸°ë¡<br/>\r\n        - ê°ë°ì íë©° ê³µë¶í ë´ì©<br/>\r\n        - ë¼ë¬¸ì ì½ì¼ë©° ê³µë¶í ë´ì©<br/>\r\n        </Intro>\r\n        <ContentWrapper>\r\n            <List>\r\n              <CategoryItem category=\"Papers\">Papers</CategoryItem>\r\n              <CategoryItem category=\"Machine Learning\">Machine Learning</CategoryItem>\r\n              <CategoryItem category=\"Computer Science\">Computer Science</CategoryItem>\r\n              <CategoryItem category=\"Web\">Web</CategoryItem>\r\n            </List>\r\n            <Content>\r\n              <CategoryTitle>Papers</CategoryTitle>\r\n              {posts\r\n                .filter((post) => post.node.frontmatter.category === \"Paper\")\r\n                .map(\r\n                  ({node: {id, fields: {slug}, frontmatter}}: PostListItemType) => (\r\n                    <PostItem {...frontmatter} link={slug}></PostItem>\r\n                  ),\r\n              )}\r\n              <CategoryTitle>Machine Learning</CategoryTitle>\r\n              {posts\r\n                .filter((post) => post.node.frontmatter.category === \"Machine Learning\")\r\n                .map(\r\n                  ({node: {id, fields: {slug}, frontmatter}}: PostListItemType) => (\r\n                    <PostItem {...frontmatter} link={slug}></PostItem>\r\n                  ),\r\n              )}               \r\n              <CategoryTitle>Computer Science</CategoryTitle>\r\n              {posts\r\n                .filter((post) => post.node.frontmatter.category === \"Computer Science\")\r\n                .map(\r\n                  ({node: {id, fields: {slug}, frontmatter}}: PostListItemType) => (\r\n                    <PostItem {...frontmatter} link={slug}></PostItem>\r\n                  ),\r\n              )}\r\n              <CategoryTitle>Web</CategoryTitle>\r\n              {posts\r\n                .filter((post) => post.node.frontmatter.category === \"Web\")\r\n                .map(\r\n                  ({node: {id, fields: {slug}, frontmatter}}: PostListItemType) => (\r\n                    <PostItem {...frontmatter} link={slug}></PostItem>\r\n                  ),\r\n              )}\r\n            </Content>\r\n        </ContentWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { graphql } from 'gatsby'\r\nimport Template from 'components/Common/Template'\r\nimport Header from 'components/Posts/Header'\r\nimport PostList from 'components/Posts/PostList'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\ntype PostsProps = {\r\n    data: {\r\n        allMarkdownRemark: {\r\n            edges: PostListItemType[]\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsPage: FunctionComponent<PostsProps> = function ({\r\n    data: {\r\n      allMarkdownRemark: { edges },\r\n    }\r\n}) {\r\n  return (\r\n    <Template>\r\n      <Header />\r\n      <PostList posts={edges} />\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default PostsPage\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/contents/posts/\" } },\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["FooterWrapper","_styled","target","name","styles","___EmotionJSX","HeaderWrapper","MenuWrapper","Item","TitleWrapper","Link","to","Container","_ref","children","Header","GlobalStyle","Footer","PostItemWrapper","Title","Date","title","date","category","link","Intro","ContentWrapper","Content","List","CategoryTitle","posts","CategoryItem","filter","post","node","frontmatter","map","_ref2","id","fields","slug","PostItem","_extends","_ref3","_ref4","_ref5","data","allMarkdownRemark","edges","Template","PostList"],"sourceRoot":""}